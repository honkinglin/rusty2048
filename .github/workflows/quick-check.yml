name: Quick Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  FONTCONFIG_NO_PKG_CONFIG: "1"
  RUST_FONTCONFIG_DLOPEN: "1"
  PKG_CONFIG_ALLOW_SYSTEM_CFLAGS: "1"
  PKG_CONFIG_ALLOW_SYSTEM_LIBS: "1"

jobs:
  quick-check:
    name: Quick Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Add wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Install system deps (safe baseline)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libfontconfig1-dev libfreetype6-dev fontconfig
          
          # Verify fontconfig installation
          pkg-config --exists fontconfig && echo "FontConfig found"
          pkg-config --libs --cflags fontconfig || echo "FontConfig pkg-config failed"
          
          # Set pkg-config path
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Check formatting
        run: |
          cargo fmt -p rusty2048-core -- --check
          cargo fmt -p rusty2048-shared -- --check
          cargo fmt -p rusty2048-cli -- --check
          cargo fmt -p rusty2048-web -- --check
      
      - name: Run clippy
        run: |
          cargo clippy -p rusty2048-core --all-targets --all-features -- -D warnings
          cargo clippy -p rusty2048-shared --all-targets --all-features -- -D warnings
          cargo clippy -p rusty2048-cli --all-targets --all-features -- -D warnings
          # 关键：web 用 wasm 目标
          cargo clippy -p rusty2048-web --target wasm32-unknown-unknown -- -D warnings
      
      - name: Run tests / checks
        run: |
          cargo test -p rusty2048-core
          cargo test -p rusty2048-shared
          cargo test -p rusty2048-cli
          # web 改为 wasm 目标的类型检查
          cargo check -p rusty2048-web --target wasm32-unknown-unknown
      
      - name: Build core projects (excluding desktop)
        env:
          FONTCONFIG_NO_PKG_CONFIG: "1"
          RUST_FONTCONFIG_DLOPEN: "1"
        run: |
          cargo build --release -p rusty2048-core
          cargo build --release -p rusty2048-shared
          cargo build --release -p rusty2048-cli
      
      - name: Build Web (WASM only)
        env:
          FONTCONFIG_NO_PKG_CONFIG: "1"
          RUST_FONTCONFIG_DLOPEN: "1"
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS: "1"
          PKG_CONFIG_ALLOW_SYSTEM_LIBS: "1"
        run: |
          cargo install wasm-pack
          cd web
          # Ensure we're building for WASM target
          wasm-pack build --target web --out-dir public/pkg -- --target wasm32-unknown-unknown
